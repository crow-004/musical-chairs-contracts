{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[],"name":"AlreadyCurrentOwner","type":"error"},{"inputs":[],"name":"AlreadyCurrentRecipient","type":"error"},{"inputs":[],"name":"AlreadyDeposited","type":"error"},{"inputs":[],"name":"AlreadyRefunded","type":"error"},{"inputs":[],"name":"AmountPerWinnerLessThanStake","type":"error"},{"inputs":[],"name":"CalculatedWinningsCannotBeZero","type":"error"},{"inputs":[],"name":"CallerIsNotBackend","type":"error"},{"inputs":[],"name":"CommissionMustBeLessThanStake","type":"error"},{"inputs":[],"name":"DirectOwnershipTransferDisabled","type":"error"},{"inputs":[],"name":"DuplicatePlayerAddressInArray","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"ETHCommissionWithdrawalFailed","type":"error"},{"inputs":[],"name":"ETHEmergencyWithdrawalFailed","type":"error"},{"inputs":[],"name":"ETHRefundFailed","type":"error"},{"inputs":[],"name":"ETHTransferFailed","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"GameAlreadyEnded","type":"error"},{"inputs":[],"name":"GameAlreadyExists","type":"error"},{"inputs":[],"name":"GameCannotBeCancelledFromCurrentState","type":"error"},{"inputs":[],"name":"GameNotCancelledOrFailed","type":"error"},{"inputs":[],"name":"GameNotFinished","type":"error"},{"inputs":[],"name":"GameNotFound","type":"error"},{"inputs":[],"name":"GameNotReadyForResults","type":"error"},{"inputs":[],"name":"GameNotWaitingForDeposits","type":"error"},{"inputs":[],"name":"IncorrectETHAmountSent","type":"error"},{"inputs":[],"name":"IncorrectNumberOfWinners","type":"error"},{"inputs":[],"name":"IncorrectPlayerCountForGame","type":"error"},{"inputs":[],"name":"InvalidAddress","type":"error"},{"inputs":[],"name":"InvalidGameIdForCreation","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"LoserMustBeDepositedPlayer","type":"error"},{"inputs":[],"name":"LoserNotInPlayerList","type":"error"},{"inputs":[],"name":"MustSetAtLeastTwoPlayers","type":"error"},{"inputs":[],"name":"NewPlayerCountTooSmallOrLarge","type":"error"},{"inputs":[],"name":"NoCommissionToWithdraw","type":"error"},{"inputs":[],"name":"NoDepositFoundForRefund","type":"error"},{"inputs":[],"name":"NoETHToWithdraw","type":"error"},{"inputs":[],"name":"NoNewOwnerProposed","type":"error"},{"inputs":[],"name":"NoNewRecipientProposed","type":"error"},{"inputs":[],"name":"NoWinningsRecordedOrZero","type":"error"},{"inputs":[],"name":"NotAWinner","type":"error"},{"inputs":[],"name":"NotEnoughActiveDepositedPlayers","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"NotOwnerOrProposed","type":"error"},{"inputs":[],"name":"NotRegisteredPlayer","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"PlayerAddressCannotBeZero","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[],"name":"RenounceOwnershipDisabled","type":"error"},{"inputs":[],"name":"StakeMustBeGreaterThanCommission","type":"error"},{"inputs":[],"name":"StakeMustBePositive","type":"error"},{"inputs":[],"name":"TimelockNotPassed","type":"error"},{"inputs":[],"name":"TooManyPlayers","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"inputs":[],"name":"UpgradeNotProposedOrDifferent","type":"error"},{"inputs":[],"name":"WinnerCannotBeLoser","type":"error"},{"inputs":[],"name":"WinnerNotDepositedPlayer","type":"error"},{"inputs":[],"name":"WinnerNotRegisteredPlayer","type":"error"},{"inputs":[],"name":"WinningsAlreadyClaimed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldBackendAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newBackendAddress","type":"address"}],"name":"BackendAddressSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"oldAmount","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"newAmount","type":"uint256"}],"name":"CommissionAmountSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"proposedRecipient","type":"address"},{"indexed":true,"internalType":"uint256","name":"executionTimestamp","type":"uint256"}],"name":"CommissionRecipientChangeProposed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldRecipient","type":"address"},{"indexed":true,"internalType":"address","name":"newRecipient","type":"address"}],"name":"CommissionRecipientSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"CommissionWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":false,"internalType":"enum MusicalChairsGame.GameState","name":"cancelledFromState","type":"uint8"}],"name":"GameCancelledByTimeout","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":true,"internalType":"address","name":"player","type":"address"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"GameDeposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"GameFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":false,"internalType":"address[]","name":"players","type":"address[]"}],"name":"GamePlayersSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":false,"internalType":"address[]","name":"winners","type":"address[]"},{"indexed":false,"internalType":"address","name":"loser","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountPerWinner","type":"uint256"}],"name":"GameResultsRecorded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"proposedOwner","type":"address"},{"indexed":true,"internalType":"uint256","name":"executionTimestamp","type":"uint256"}],"name":"OwnershipTransferProposed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":true,"internalType":"address","name":"player","type":"address"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"RefundClaimed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"oldCount","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"newCount","type":"uint256"}],"name":"RequiredPlayerCountSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"oldAmount","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"newAmount","type":"uint256"}],"name":"StakeAmountSet","type":"event"},{"anonymous":false,"inputs":[],"name":"UpgradeProposalCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newImplementation","type":"address"},{"indexed":true,"internalType":"uint256","name":"executionTimestamp","type":"uint256"}],"name":"UpgradeProposed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":true,"internalType":"address","name":"winner","type":"address"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"WinningsClaimed","type":"event"},{"inputs":[],"name":"DEFAULT_TIMELOCK_DELAY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEPLOYMENT_SALT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"accumulatedCommission","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"backendAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"}],"name":"cancelGameByBackend","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"cancelUpgradeProposal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"}],"name":"claimWinnings","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"commissionAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"commissionRecipient","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"commissionRecipientChangeProposalTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"},{"internalType":"address[]","name":"playersArray","type":"address[]"}],"name":"createGameAndSetPlayers","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"}],"name":"depositStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"emergencyWithdrawETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"executeCommissionRecipientChange","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"executeOwnerChange","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"},{"internalType":"string","name":"reason","type":"string"}],"name":"failGame","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"games","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"enum MusicalChairsGame.GameState","name":"state","type":"uint8"},{"internalType":"uint256","name":"depositCount","type":"uint256"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"address","name":"loser","type":"address"},{"internalType":"uint256","name":"endedAt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"}],"name":"getGameInfo","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"enum MusicalChairsGame.GameState","name":"state","type":"uint8"},{"internalType":"address[]","name":"players","type":"address[]"},{"internalType":"uint256","name":"depositCount","type":"uint256"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"uint256","name":"endedAt","type":"uint256"},{"internalType":"address","name":"loserAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"},{"internalType":"address","name":"playerAddress","type":"address"}],"name":"getPlayerDepositStatus","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"},{"internalType":"address","name":"initialBackendAddress","type":"address"},{"internalType":"address","name":"initialCommissionRecipient","type":"address"},{"internalType":"uint256","name":"initialStakeAmount","type":"uint256"},{"internalType":"uint256","name":"initialCommissionAmount","type":"uint256"},{"internalType":"uint256","name":"initialRequiredPlayerCount","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"},{"internalType":"address","name":"playerAddress","type":"address"}],"name":"isWinnerOfGame","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nextGameIdToCreate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ownerChangeProposalTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newRecipient","type":"address"}],"name":"proposeNewCommissionRecipient","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwnerCandidate","type":"address"}],"name":"proposeNewOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"proposeUpgrade","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"proposedNewCommissionRecipient","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proposedNewImplementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proposedNewOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"},{"internalType":"address[]","name":"winnersArray","type":"address[]"},{"internalType":"address","name":"loserAddress","type":"address"}],"name":"recordResults","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"refundClaimed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"}],"name":"requestRefund","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"requiredPlayerCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newBackendAddress","type":"address"}],"name":"setBackendAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newCommissionAmount","type":"uint256"}],"name":"setCommissionAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newCount","type":"uint256"}],"name":"setRequiredPlayerCount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newStakeAmount","type":"uint256"}],"name":"setStakeAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stakeAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgrade","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"upgradeProposalTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"winningsClaimed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"winningsPerWinner","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawAccumulatedCommission","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"author":"crow","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"FailedCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}],"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}],"UUPSUnauthorizedCallContext()":[{"details":"The call is from an unauthorized context."}],"UUPSUnsupportedProxiableUUID(bytes32)":[{"details":"The storage `slot` is unsupported as a UUID."}]},"events":{"BackendAddressSet(address,address)":{"params":{"newBackendAddress":"The new backend address.","oldBackendAddress":"The previous backend address."}},"CommissionAmountSet(uint256,uint256)":{"params":{"newAmount":"The new commission amount.","oldAmount":"The previous commission amount."}},"CommissionRecipientChangeProposed(address,uint256)":{"params":{"executionTimestamp":"The earliest time the change can be executed.","proposedRecipient":"The address of the new recipient candidate."}},"CommissionRecipientSet(address,address)":{"params":{"newRecipient":"The new recipient address.","oldRecipient":"The previous recipient address."}},"CommissionWithdrawn(address,uint256)":{"params":{"amount":"The amount of ETH withdrawn.","recipient":"The address that received the commission."}},"GameCancelledByTimeout(uint256,uint8)":{"params":{"cancelledFromState":"The state the game was in before cancellation.","gameId":"The ID of the cancelled game."}},"GameDeposit(uint256,address,uint256)":{"params":{"amount":"The amount deposited.","gameId":"The ID of the game.","player":"The address of the player who deposited."}},"GameFailed(uint256,string)":{"params":{"gameId":"The ID of the failed game.","reason":"A string describing the reason for failure."}},"GamePlayersSet(uint256,address[])":{"params":{"gameId":"The ID of the game.","players":"The array of player addresses."}},"GameResultsRecorded(uint256,address[],address,uint256)":{"params":{"amountPerWinner":"The amount of ETH each winner can claim.","gameId":"The ID of the game.","loser":"The address of the loser.","winners":"An array of winner addresses."}},"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"OwnershipTransferExecuted(address,address)":{"params":{"newOwner":"The address of the new owner.","oldOwner":"The address of the previous owner."}},"OwnershipTransferProposed(address,uint256)":{"params":{"executionTimestamp":"The earliest time the transfer can be executed.","proposedOwner":"The address of the new owner candidate."}},"RefundClaimed(uint256,address,uint256)":{"params":{"amount":"The amount refunded.","gameId":"The ID of the game.","player":"The address of the player receiving the refund."}},"RequiredPlayerCountSet(uint256,uint256)":{"params":{"newCount":"The new required player count.","oldCount":"The previous required player count."}},"StakeAmountSet(uint256,uint256)":{"params":{"newAmount":"The new stake amount.","oldAmount":"The previous stake amount."}},"UpgradeProposed(address,uint256)":{"params":{"executionTimestamp":"The earliest time the upgrade can be executed.","newImplementation":"The address of the new logic contract."}},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."},"WinningsClaimed(uint256,address,uint256)":{"params":{"amount":"The amount of ETH claimed.","gameId":"The ID of the game.","winner":"The address of the winner."}}},"kind":"dev","methods":{"cancelGameByBackend(uint256)":{"details":"This is typically used if not enough players deposit their stake in time.","params":{"gameId":"The ID of the game to cancel."}},"claimWinnings(uint256)":{"params":{"gameId":"The ID of the game from which to claim winnings."}},"constructor":{"custom:oz-upgrades-unsafe-allow":"constructor"},"createGameAndSetPlayers(uint256,address[])":{"params":{"gameId":"The unique ID for this game (expected to be `nextGameIdToCreate`).","playersArray":"Array of player addresses (must be REQUIRED_PLAYERS). Renamed from _players to avoid conflict"}},"depositStake(uint256)":{"params":{"gameId":"The ID of the game to deposit into."}},"failGame(uint256,string)":{"params":{"gameId":"The ID of the game to fail.","reason":"A string describing the reason for failure."}},"getGameInfo(uint256)":{"params":{"gameId":"The ID of the game to query."},"returns":{"createdAt":"The timestamp of game creation.","depositCount":"The number of players who have deposited.","endedAt":"The timestamp when the game ended.","id":"The game's ID.","loserAddress":"The address of the game's loser.","players":"An array of registered player addresses.","state":"The current state of the game."}},"getPlayerDepositStatus(uint256,address)":{"params":{"gameId":"The ID of the game.","playerAddress":"The address of the player to check."},"returns":{"_0":"bool True if the player has deposited, false otherwise."}},"initialize(address,address,address,uint256,uint256,uint256)":{"params":{"initialBackendAddress":"The initial address of the backend service.","initialCommissionAmount":"The initial commission amount per game.","initialCommissionRecipient":"The initial address for receiving commissions.","initialOwner":"The initial owner of the contract.","initialRequiredPlayerCount":"The initial number of players required for a game.","initialStakeAmount":"The initial stake amount for games."}},"isWinnerOfGame(uint256,address)":{"params":{"gameId":"The ID of the game.","playerAddress":"The address of the player to check."},"returns":{"_0":"True if the player is a winner of the game, false otherwise."}},"owner()":{"details":"Returns the address of the current owner."},"proposeNewCommissionRecipient(address)":{"params":{"newRecipient":"The address of the new recipient candidate."}},"proposeNewOwner(address)":{"params":{"newOwnerCandidate":"The address of the new owner candidate."}},"proposeUpgrade(address)":{"params":{"newImplementation":"The address of the new logic contract."}},"proxiableUUID()":{"details":"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"recordResults(uint256,address[],address)":{"params":{"gameId":"The ID of the game.","loserAddress":"The address of the loser. Renamed from _loser","winnersArray":"An array of winner addresses. Renamed from _winners"}},"renounceOwnership()":{"details":"This function will revert if called, ensuring an owner always exists. This is a security measure to prevent accidental loss of control over the contract."},"requestRefund(uint256)":{"params":{"gameId":"The ID of the game from which to request a refund."}},"setBackendAddress(address)":{"params":{"newBackendAddress":"The new address for the backend service."}},"setCommissionAmount(uint256)":{"params":{"newCommissionAmount":"The new commission amount."}},"setRequiredPlayerCount(uint256)":{"params":{"newCount":"The new required player count."}},"setStakeAmount(uint256)":{"params":{"newStakeAmount":"The new stake amount."}},"transferOwnership(address)":{"details":"This function will revert if called. Use `proposeNewOwner` and `executeOwnerChange` instead. This prevents bypassing the timelock with a direct ownership transfer.","params":{"_newOwner":"The address of the new owner (unused, part of the override)."}},"upgrade(address)":{"params":{"newImplementation":"The address of the new logic contract."}},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"title":"MusicalChairsGame","version":1},"userdoc":{"events":{"BackendAddressSet(address,address)":{"notice":"Emitted when the backend address is changed."},"CommissionAmountSet(uint256,uint256)":{"notice":"Emitted when the commission amount is changed."},"CommissionRecipientChangeProposed(address,uint256)":{"notice":"Emitted when a new commission recipient is proposed."},"CommissionRecipientSet(address,address)":{"notice":"Emitted when the commission recipient address is changed."},"CommissionWithdrawn(address,uint256)":{"notice":"Emitted when the accumulated commission is withdrawn."},"GameCancelledByTimeout(uint256,uint8)":{"notice":"Emitted when a game is cancelled by the backend."},"GameDeposit(uint256,address,uint256)":{"notice":"Emitted when a player deposits their stake."},"GameFailed(uint256,string)":{"notice":"Emitted when a game is marked as failed by the backend."},"GamePlayersSet(uint256,address[])":{"notice":"Emitted when a new game is created and players are set."},"GameResultsRecorded(uint256,address[],address,uint256)":{"notice":"Emitted when the backend records the results of a game."},"OwnershipTransferExecuted(address,address)":{"notice":"Emitted when ownership is transferred."},"OwnershipTransferProposed(address,uint256)":{"notice":"Emitted when a new owner is proposed."},"RefundClaimed(uint256,address,uint256)":{"notice":"Emitted when a player claims a refund from a cancelled or failed game."},"RequiredPlayerCountSet(uint256,uint256)":{"notice":"Emitted when the required player count is changed."},"StakeAmountSet(uint256,uint256)":{"notice":"Emitted when the stake amount is changed."},"UpgradeProposalCancelled()":{"notice":"Emitted when an upgrade proposal is cancelled. "},"UpgradeProposed(address,uint256)":{"notice":"Emitted when a contract upgrade is proposed."},"WinningsClaimed(uint256,address,uint256)":{"notice":"Emitted when a winner successfully claims their winnings."}},"kind":"user","methods":{"DEFAULT_TIMELOCK_DELAY()":{"notice":"The default delay for time-locked operations like ownership transfer."},"DEPLOYMENT_SALT()":{"notice":"A random value to ensure unique bytecode for each deployment."},"accumulatedCommission()":{"notice":"The total commission collected from all games, awaiting withdrawal."},"backendAddress()":{"notice":"The address of the backend service authorized to manage games."},"cancelGameByBackend(uint256)":{"notice":"Called by the backend to cancel a game."},"cancelUpgradeProposal()":{"notice":"Cancels a pending upgrade proposal. "},"claimWinnings(uint256)":{"notice":"Allows a winner to claim their winnings from a finished game."},"commissionAmount()":{"notice":"The fixed commission amount taken from each game's pot."},"commissionRecipient()":{"notice":"The address that receives the accumulated commission."},"commissionRecipientChangeProposalTimestamp()":{"notice":"The timestamp when the commission recipient change was proposed."},"createGameAndSetPlayers(uint256,address[])":{"notice":"Called by the backend to set up a new game with a list of players. The backend is responsible for ensuring the correct number of players (e.g., 5) are provided."},"depositStake(uint256)":{"notice":"Allows a registered player to deposit their stake for a game."},"emergencyWithdrawETH()":{"notice":"Allows the owner to withdraw all ETH from the contract in an emergency. "},"executeCommissionRecipientChange()":{"notice":"Executes a pending commission recipient change after the timelock has passed. "},"executeOwnerChange()":{"notice":"Executes a pending ownership transfer after the timelock has passed. "},"failGame(uint256,string)":{"notice":"Called by backend if an unrecoverable error occurs during game processing."},"games(uint256)":{"notice":"Mapping from game ID to the game's data."},"getGameInfo(uint256)":{"notice":"Retrieves detailed information about a specific game."},"getPlayerDepositStatus(uint256,address)":{"notice":"Checks if a player has deposited their stake for a specific game."},"initialize(address,address,address,uint256,uint256,uint256)":{"notice":"Initializes the contract state. Can only be called once."},"isWinnerOfGame(uint256,address)":{"notice":"Checks if a specific player is a winner of a given game."},"nextGameIdToCreate()":{"notice":"A counter for creating unique on-chain game IDs."},"ownerChangeProposalTimestamp()":{"notice":"The timestamp when the ownership transfer was proposed."},"proposeNewCommissionRecipient(address)":{"notice":"Proposes a new commission recipient."},"proposeNewOwner(address)":{"notice":"Proposes a new owner for the contract."},"proposeUpgrade(address)":{"notice":"Proposes a contract upgrade to a new implementation address."},"proposedNewCommissionRecipient()":{"notice":"The address of the proposed new commission recipient."},"proposedNewImplementation()":{"notice":"The address of the proposed new implementation for an upgrade."},"proposedNewOwner()":{"notice":"The address of the proposed new owner, pending acceptance."},"recordResults(uint256,address[],address)":{"notice":"Backend records the game results. Winners share the loser's stake minus commission."},"refundClaimed(uint256,address)":{"notice":"Mapping to track if a player has already claimed their refund for a specific game."},"renounceOwnership()":{"notice":"Overridden to prevent the contract from ever being ownerless."},"requestRefund(uint256)":{"notice":"Allows a player to request a refund from a cancelled or failed game."},"requiredPlayerCount()":{"notice":"The number of players required for a game to start."},"setBackendAddress(address)":{"notice":"Sets the backend address. Can only be called by the owner."},"setCommissionAmount(uint256)":{"notice":"Sets the commission amount taken per game."},"setRequiredPlayerCount(uint256)":{"notice":"Sets the number of players required for a game."},"setStakeAmount(uint256)":{"notice":"Sets the stake amount required for games."},"stakeAmount()":{"notice":"The amount of ETH each player must stake to participate."},"transferOwnership(address)":{"notice":"Overridden to enforce the two-step, time-locked ownership transfer process."},"upgrade(address)":{"notice":"A dedicated, external function for the owner to trigger an upgrade. This is more explicit and robust than relying on the inherited public `upgradeTo`."},"upgradeProposalTimestamp()":{"notice":"The timestamp when the contract upgrade was proposed."},"winningsClaimed(uint256,address)":{"notice":"Mapping to track if a winner has already claimed their winnings for a specific game."},"winningsPerWinner(uint256)":{"notice":"Mapping from game ID to the winnings amount for each winner of that game."},"withdrawAccumulatedCommission()":{"notice":"Allows the backend to withdraw all accumulated commission. "}},"notice":"A smart contract for a \"Musical Chairs\" style game where players deposit a stake, and the last one \"out\" loses their stake to the winners.","version":1}},"settings":{"compilationTarget":{"contracts/MusicalChairs.sol":"MusicalChairsGame"},"debug":{"revertStrings":"debug"},"evmVersion":"paris","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"details":{"constantOptimizer":true,"cse":true,"deduplicate":true,"inliner":true,"jumpdestRemover":true,"orderLiterals":true,"peephole":true,"simpleCounterForLoopUncheckedIncrement":true,"yul":true,"yulDetails":{"optimizerSteps":"dhfoD:fDnTOcmu","stackAllocation":true}},"runs":200},"remappings":[],"viaIR":true},"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"keccak256":"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a","license":"MIT","urls":["bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6","dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2"]},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"keccak256":"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05","license":"MIT","urls":["bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08","dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q"]},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"keccak256":"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63","license":"MIT","urls":["bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec","dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ"]},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"keccak256":"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397","license":"MIT","urls":["bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9","dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"]},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"keccak256":"0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866","license":"MIT","urls":["bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf","dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv"]},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"keccak256":"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486","license":"MIT","urls":["bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d","dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7"]},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"keccak256":"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d","license":"MIT","urls":["bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196","dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA"]},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"keccak256":"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898","license":"MIT","urls":["bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70","dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2"]},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"keccak256":"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c","license":"MIT","urls":["bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa","dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM"]},"@openzeppelin/contracts/utils/Address.sol":{"keccak256":"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c","license":"MIT","urls":["bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e","dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR"]},"@openzeppelin/contracts/utils/Errors.sol":{"keccak256":"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123","license":"MIT","urls":["bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf","dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"]},"@openzeppelin/contracts/utils/StorageSlot.sol":{"keccak256":"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97","license":"MIT","urls":["bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b","dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"]},"contracts/MusicalChairs.sol":{"keccak256":"0x205a07e8b8ba0495cae54f0cf9b91242c7f3a4746e49b4e1ab8336f45d32e3ab","license":"UNLICENSED","urls":["bzz-raw://669e233fbebe11e55eb83a80fc650b28ee1d074a713cfbdb9e414fc950a9be8c","dweb:/ipfs/QmWPrT1Bwv6NxEvPF6hRQ5MCfnBVnumj4Zy76HKEusq1dQ"]}},"version":1}